#!/bin/bash
pid=$1
gpus=`echo $CUDA_VISIBLE_DEVICES|sed 's/,/ /g'`
cpuset=`scontrol show job -d $SLURM_JOBID |grep CPU_IDs | sed 's/^.*CPU_IDs=//'|sed 's/ .*//'`
cpuset=`echo $cpuset|sed 's/,/ /g'`
for cpu in $cpuset; do
  if [[ "$cpu" =~  "-" ]];then
     range=`echo $cpu|sed 's/-/ /'`
     for cpurange in $(seq ${range[0]} ${range[1]} ); do
        gaussian_cpulist="$gaussian_cpulist $cpurange"
     done
  else
     gaussian_cpulist="$gaussian_cpulist $cpu"
  fi
done
cpueven=
cpuodd=
for cpu in $gaussian_cpulist; do
   if [[ $(($cpu%2)) -eq 0 ]]; then
      cpueven="$cpueven$cpu "
   else
      cpuodd="$cpuodd$cpu "
   fi
done
lastevencpu=-1
lastoddcpu=-1
for gpu in $gpus;do
    if [[ $gpu -le 1 ]]; then
      for cpu in $cpueven; do
        if [[ $(($cpu%2)) -eq 0 ]]; then
         if [[ $cpu -gt $lastevencpu ]]; then
           gaussian_boundcpu="$gaussian_boundcpu$cpu "
           lastevencpu=$cpu
           break
         fi
        fi
      done
     
    else
      for cpu in $cpuodd; do
        if [[ $(($cpu%2)) -eq 1 ]]; then
         if [[ $cpu -gt $lastoddcpu ]]; then
           gaussian_boundcpu="$gaussian_boundcpu$cpu "
           lastoddcpu=$cpu
           break
         fi
        fi
      done
    fi
done
gauss_bound=($gaussian_boundcpu)
gauss_gpus=($gpus)
if [[ ${#gauss_bound[@]} -ne ${#gauss_gpus[@]} ]]; then
    even=0
    odd=1
    unset gaussian_boundcpu
    for gpu in $gpus;do
       if [[ $gpu -le 1 ]]; then
         gaussian_boundcpu="$gaussian_boundcpu$even "
         even=$(( $even + 2 ))  
       else
         gaussian_boundcpu="$gaussian_boundcpu$odd "
         odd=$(( $odd + 2 ))  
       fi;
    done
fi
gaussian_cpulist=`echo $gaussian_cpulist|sed 's/ /,/g'`
gaussian_boundcpu=`echo $gaussian_boundcpu|sed 's/ /,/g'`
echo  "%CPU=$gaussian_cpulist" > $pid.out
echo  "%GPUCPU=$CUDA_VISIBLE_DEVICES=$gaussian_boundcpu" >> $pid.out
